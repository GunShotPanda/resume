image: node:latest

stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/
    - assets/data/
    - static/data/

before_script:
  - mkdir -vp ~/.ssh
  - eval $(ssh-agent -s)
  - echo "${HOST_NAME}","${HOST_KEY}" > ~/.ssh/known_hosts 
  - chmod 644 ~/.ssh/known_hosts -v
  - echo "${SSH_PRIVATE_KEY}" > ~/.ssh/key.pem
  - chmod 600 ~/.ssh/key.pem -v

load_resources:
  stage: .pre
  script:
    - rm -rfv ./assets/data
    - rm -rfv ./static/data
    - scp -i ~/.ssh/key.pem -rv ${USER}@${HOST_NAME}:${RESOURCES_DIR}/assets-data ./assets/data
    - scp -i ~/.ssh/key.pem -rv ${USER}@${HOST_NAME}:${RESOURCES_DIR}/static-data ./static/data
    - RESUME_DATE=`date +%Y-%m-%d`
    - echo ${RESUME_DATE}
    - echo sed \"s/\\\"updated\\\":[ ]*\\\"[0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\}\\\"/\\\"updated\\\":\\\"${RESUME_DATE}\\\"/g\" > ./update_time.sh
    - cat ./update_time.sh 
    - cat ./assets/data/setting.json | sh ./update_time.sh > ./assets/data/setting2.json
    - mv ./assets/data/setting2.json ./assets/data/setting.json -fv
    - cat ./assets/data/setting.json

install_dependencies:
  stage: .pre
  script:
    - npm install

generate:
  stage: build
  script:
    - npm run generate
  artifacts:
    paths:
      - dist/

resume:
  stage: deploy
  script:
    - scp -i ~/.ssh/key.pem -rv ./dist/* ${USER}@${HOST_NAME}:${DEPLOY_LOCAL}/

pages:
  stage: deploy
  script:
    - mkdir -vp ./public
    - mv ./dist/* ./public/ -v
  artifacts:
    paths:
      - public
  only:
    - master

github:
  stage: deploy
  script:
    - git clone https://github.com/${GITHUB_REPO_OWNER}/${GITHUB_REPO_NAME}
    - cd ${GITHUB_REPO_NAME}
    - echo https://"${GITHUB_USER_NAME}":"${GITHUB_PASSWORD}"@github.com > .git-credentials
    - git config --global credential.helper store
    - git config user.email ${GITHUB_USER_EMAIL}
    - git config user.name '${GITHUB_USER_NAME}'
    - rm -rfv ./*
    - cp -rv ../dist/* ./
    - git add .
    - COMMIT_MESSAGE="[GitLab CI/CD] ${CI_COMMIT_TIMESTAMP} ${CI_PIPELINE_SOURCE} ${CI_COMMIT_SHORT_SHA} (${CI_COMMIT_TITLE}) at ${CI_SERVER_HOST} (${CI_SERVER_VERSION}, ${CI_SERVER_REVISION}) ${CI_PROJECT_PATH}, ID ${CI_PIPELINE_IID} (global ${CI_PIPELINE_ID}) using Runner ${CI_RUNNER_ID} (${CI_RUNNER_SHORT_TOKEN}, version ${CI_RUNNER_REVISION}), by ${GITLAB_USER_NAME}"
    - echo ${COMMIT_MESSAGE}
    - git commit -m "${COMMIT_MESSAGE}"
    - git push